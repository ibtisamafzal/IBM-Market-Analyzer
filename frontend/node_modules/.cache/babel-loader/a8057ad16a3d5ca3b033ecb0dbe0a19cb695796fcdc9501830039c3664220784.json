{"ast":null,"code":"var _jsxFileName = \"D:\\\\IBM-Analyzer\\\\frontend\\\\src\\\\components\\\\SentimentMeter.js\";\nimport React from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentMeter = ({\n  score\n}) => {\n  const getColor = value => {\n    if (value > 0.5) return \"danger\"; // ðŸ”´ Hot (Trending Positive)\n    if (value < -0.5) return \"primary\"; // ðŸ”µ Cold (Trending Negative)\n    return \"warning\"; // ðŸŸ¡ Neutral\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sentiment-meter\",\n    children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n      now: (score + 1) * 50 // Convert score (-1 to 1) to a 0-100 scale\n      ,\n      variant: getColor(score),\n      animated: true,\n      striped: true,\n      label: `${(score * 100).toFixed(1)}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = SentimentMeter;\nexport default SentimentMeter;\nvar _c;\n$RefreshReg$(_c, \"SentimentMeter\");","map":{"version":3,"names":["React","ProgressBar","jsxDEV","_jsxDEV","SentimentMeter","score","getColor","value","className","children","now","variant","animated","striped","label","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/IBM-Analyzer/frontend/src/components/SentimentMeter.js"],"sourcesContent":["import React from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\n\r\nconst SentimentMeter = ({ score }) => {\r\n    const getColor = (value) => {\r\n        if (value > 0.5) return \"danger\"; // ðŸ”´ Hot (Trending Positive)\r\n        if (value < -0.5) return \"primary\"; // ðŸ”µ Cold (Trending Negative)\r\n        return \"warning\"; // ðŸŸ¡ Neutral\r\n    };\r\n\r\n    return (\r\n        <div className=\"sentiment-meter\">\r\n            <ProgressBar \r\n                now={(score + 1) * 50} // Convert score (-1 to 1) to a 0-100 scale\r\n                variant={getColor(score)}\r\n                animated\r\n                striped\r\n                label={`${(score * 100).toFixed(1)}%`}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SentimentMeter;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAClC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IACxB,IAAIA,KAAK,GAAG,GAAG,EAAE,OAAO,QAAQ,CAAC,CAAC;IAClC,IAAIA,KAAK,GAAG,CAAC,GAAG,EAAE,OAAO,SAAS,CAAC,CAAC;IACpC,OAAO,SAAS,CAAC,CAAC;EACtB,CAAC;EAED,oBACIJ,OAAA;IAAKK,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5BN,OAAA,CAACF,WAAW;MACRS,GAAG,EAAE,CAACL,KAAK,GAAG,CAAC,IAAI,EAAG,CAAC;MAAA;MACvBM,OAAO,EAAEL,QAAQ,CAACD,KAAK,CAAE;MACzBO,QAAQ;MACRC,OAAO;MACPC,KAAK,EAAE,GAAG,CAACT,KAAK,GAAG,GAAG,EAAEU,OAAO,CAAC,CAAC,CAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACC,EAAA,GAlBIhB,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}