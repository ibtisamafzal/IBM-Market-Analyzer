{"ast":null,"code":"var _jsxFileName = \"D:\\\\IBM-Analyzer\\\\frontend\\\\src\\\\components\\\\SentimentMeter.js\";\nimport React from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentMeter = ({\n  score\n}) => {\n  // Ensure score is a number and within bounds\n  const normalizedScore = Math.max(-1, Math.min(1, Number(score) || 0));\n  const getVariant = value => {\n    if (value > 0.3) return \"success\"; // Positive\n    if (value < -0.3) return \"danger\"; // Negative\n    return \"warning\"; // Neutral\n  };\n  const getLabel = value => {\n    const percentage = ((value + 1) * 50).toFixed(1);\n    return `${percentage}%`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sentiment-meter\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      now: (normalizedScore + 1) * 50,\n      variant: getVariant(normalizedScore),\n      animated: true,\n      striped: true,\n      label: getLabel(normalizedScore),\n      style: {\n        height: '25px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-2\",\n      children: normalizedScore > 0.3 ? \"Positive Trend\" : normalizedScore < -0.3 ? \"Negative Trend\" : \"Neutral Trend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = SentimentMeter;\nexport default SentimentMeter;\nvar _c;\n$RefreshReg$(_c, \"SentimentMeter\");","map":{"version":3,"names":["React","ProgressBar","jsxDEV","_jsxDEV","SentimentMeter","score","normalizedScore","Math","max","min","Number","getVariant","value","getLabel","percentage","toFixed","className","children","now","variant","animated","striped","label","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/IBM-Analyzer/frontend/src/components/SentimentMeter.js"],"sourcesContent":["import React from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\n\r\nconst SentimentMeter = ({ score }) => {\r\n    // Ensure score is a number and within bounds\r\n    const normalizedScore = Math.max(-1, Math.min(1, Number(score) || 0));\r\n    \r\n    const getVariant = (value) => {\r\n        if (value > 0.3) return \"success\";  // Positive\r\n        if (value < -0.3) return \"danger\";  // Negative\r\n        return \"warning\";  // Neutral\r\n    };\r\n\r\n    const getLabel = (value) => {\r\n        const percentage = ((value + 1) * 50).toFixed(1);\r\n        return `${percentage}%`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"sentiment-meter\">\r\n            <ProgressBar \r\n                now={(normalizedScore + 1) * 50}\r\n                variant={getVariant(normalizedScore)}\r\n                animated\r\n                striped\r\n                label={getLabel(normalizedScore)}\r\n                style={{ height: '25px' }}\r\n            />\r\n            <div className=\"text-center mt-2\">\r\n                {normalizedScore > 0.3 ? \"Positive Trend\" :\r\n                    normalizedScore < -0.3 ? \"Negative Trend\" : \"Neutral Trend\"}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SentimentMeter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAClC;EACA,MAAMC,eAAe,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEC,MAAM,CAACL,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;EAErE,MAAMM,UAAU,GAAIC,KAAK,IAAK;IAC1B,IAAIA,KAAK,GAAG,GAAG,EAAE,OAAO,SAAS,CAAC,CAAE;IACpC,IAAIA,KAAK,GAAG,CAAC,GAAG,EAAE,OAAO,QAAQ,CAAC,CAAE;IACpC,OAAO,SAAS,CAAC,CAAE;EACvB,CAAC;EAED,MAAMC,QAAQ,GAAID,KAAK,IAAK;IACxB,MAAME,UAAU,GAAG,CAAC,CAACF,KAAK,GAAG,CAAC,IAAI,EAAE,EAAEG,OAAO,CAAC,CAAC,CAAC;IAChD,OAAO,GAAGD,UAAU,GAAG;EAC3B,CAAC;EAED,oBACIX,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5Bd,OAAA,CAACF,WAAW;MACRiB,GAAG,EAAE,CAACZ,eAAe,GAAG,CAAC,IAAI,EAAG;MAChCa,OAAO,EAAER,UAAU,CAACL,eAAe,CAAE;MACrCc,QAAQ;MACRC,OAAO;MACPC,KAAK,EAAET,QAAQ,CAACP,eAAe,CAAE;MACjCiB,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFzB,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC5BX,eAAe,GAAG,GAAG,GAAG,gBAAgB,GACrCA,eAAe,GAAG,CAAC,GAAG,GAAG,gBAAgB,GAAG;IAAe;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACC,EAAA,GA/BIzB,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}