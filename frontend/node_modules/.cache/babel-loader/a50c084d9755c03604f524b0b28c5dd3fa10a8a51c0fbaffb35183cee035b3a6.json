{"ast":null,"code":"var _jsxFileName = \"D:\\\\IBM-Analyzer\\\\frontend\\\\src\\\\components\\\\SentimentMeter.js\";\nimport React from \"react\";\nimport { Gauge } from \"recharts\"; // Assuming you use recharts for the gauge\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentMeter = ({\n  score\n}) => {\n  const gaugeValue = (score + 1) * 50; // Convert [-1, 1] to [0, 100]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sentiment-meter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-white\",\n      children: \"Sentiment Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Gauge, {\n      value: gaugeValue,\n      min: 0,\n      max: 100,\n      width: 200,\n      height: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-white\",\n      children: score > 0.6 ? \"🔥 Very Positive\" : score > 0.3 ? \"😊 Positive\" : score > -0.3 ? \"😐 Neutral\" : score > -0.6 ? \"😕 Negative\" : \"💀 Very Negative\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = SentimentMeter;\nexport default SentimentMeter;\nvar _c;\n$RefreshReg$(_c, \"SentimentMeter\");","map":{"version":3,"names":["React","Gauge","jsxDEV","_jsxDEV","SentimentMeter","score","gaugeValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","min","max","width","height","_c","$RefreshReg$"],"sources":["D:/IBM-Analyzer/frontend/src/components/SentimentMeter.js"],"sourcesContent":["import React from \"react\";\r\nimport { Gauge } from \"recharts\"; // Assuming you use recharts for the gauge\r\n\r\nconst SentimentMeter = ({ score }) => {\r\n    const gaugeValue = (score + 1) * 50; // Convert [-1, 1] to [0, 100]\r\n    \r\n    return (\r\n        <div className=\"sentiment-meter\">\r\n            <h5 className=\"text-white\">Sentiment Score</h5>\r\n            <Gauge value={gaugeValue} min={0} max={100} width={200} height={150} />\r\n            <p className=\"mt-2 text-white\">{score > 0.6 ? \"🔥 Very Positive\" :\r\n                score > 0.3 ? \"😊 Positive\" :\r\n                score > -0.3 ? \"😐 Neutral\" :\r\n                score > -0.6 ? \"😕 Negative\" : \"💀 Very Negative\"}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SentimentMeter;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAClC,MAAMC,UAAU,GAAG,CAACD,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;;EAErC,oBACIF,OAAA;IAAKI,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BL,OAAA;MAAII,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/CT,OAAA,CAACF,KAAK;MAACY,KAAK,EAAEP,UAAW;MAACQ,GAAG,EAAE,CAAE;MAACC,GAAG,EAAE,GAAI;MAACC,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvET,OAAA;MAAGI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEH,KAAK,GAAG,GAAG,GAAG,kBAAkB,GAC5DA,KAAK,GAAG,GAAG,GAAG,aAAa,GAC3BA,KAAK,GAAG,CAAC,GAAG,GAAG,YAAY,GAC3BA,KAAK,GAAG,CAAC,GAAG,GAAG,aAAa,GAAG;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACM,EAAA,GAdId,cAAc;AAgBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}