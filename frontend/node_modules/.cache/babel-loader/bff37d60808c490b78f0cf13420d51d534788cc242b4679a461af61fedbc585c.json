{"ast":null,"code":"var _jsxFileName = \"D:\\\\IBM-Analyzer\\\\frontend\\\\src\\\\components\\\\SentimentMeter.js\";\nimport React from \"react\";\nimport { RadialBarChart, RadialBar, PolarAngleAxis } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentMeter = ({\n  score,\n  debug = false\n}) => {\n  let normalizedScore = Math.max(-1, Math.min(1, Number(score) || 0));\n\n  // Increase sensitivity by adding a random factor (only for testing)\n  if (debug) {\n    const randomFactor = (Math.random() - 0.5) * 0.4; // Adds variance (-0.2 to 0.2)\n    normalizedScore = Math.max(-1, Math.min(1, normalizedScore + randomFactor));\n  }\n\n  // Convert sentiment score (-1 to 1) to a 0-100 scale\n  const percentage = ((normalizedScore + 1) * 50).toFixed(1);\n\n  // Define a more fragile color scale for better differentiation\n  const getColor = value => {\n    if (value >= 90) return \"#006400\";\n    if (value >= 80) return \"#28a745\";\n    if (value >= 70) return \"#40c057\";\n    if (value >= 60) return \"#87d068\";\n    if (value >= 50) return \"#2596be\";\n    if (value >= 40) return \"#ffd700\";\n    if (value >= 30) return \"#ff8c00\";\n    if (value >= 20) return \"#e28743\";\n    if (value >= 10) return \"#ff6347\";\n    return \"#dc3545\";\n  };\n  const data = [{\n    value: Number(percentage),\n    fill: getColor(Number(percentage))\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sentiment-meter text-center\",\n    children: [/*#__PURE__*/_jsxDEV(RadialBarChart, {\n      width: 250,\n      height: 150,\n      cx: 125,\n      cy: 150,\n      innerRadius: 50,\n      outerRadius: 100,\n      startAngle: 180,\n      endAngle: 0,\n      barSize: 15,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(PolarAngleAxis, {\n        type: \"number\",\n        domain: [0, 100],\n        angleAxisId: 0,\n        tick: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadialBar, {\n        background: {\n          fill: \"#ddd\"\n        },\n        dataKey: \"value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"mt-2\",\n      style: {\n        color: getColor(percentage)\n      },\n      children: normalizedScore > 0.3 ? \"Positive\" : normalizedScore < -0.3 ? \"Negative\" : \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = SentimentMeter;\nexport default SentimentMeter;\nvar _c;\n$RefreshReg$(_c, \"SentimentMeter\");","map":{"version":3,"names":["React","RadialBarChart","RadialBar","PolarAngleAxis","jsxDEV","_jsxDEV","SentimentMeter","score","debug","normalizedScore","Math","max","min","Number","randomFactor","random","percentage","toFixed","getColor","value","data","fill","className","children","width","height","cx","cy","innerRadius","outerRadius","startAngle","endAngle","barSize","type","domain","angleAxisId","tick","fileName","_jsxFileName","lineNumber","columnNumber","background","dataKey","style","color","_c","$RefreshReg$"],"sources":["D:/IBM-Analyzer/frontend/src/components/SentimentMeter.js"],"sourcesContent":["import React from \"react\";\r\nimport { RadialBarChart, RadialBar, PolarAngleAxis } from \"recharts\";\r\n\r\nconst SentimentMeter = ({ score, debug = false }) => {\r\n    let normalizedScore = Math.max(-1, Math.min(1, Number(score) || 0));\r\n\r\n    // Increase sensitivity by adding a random factor (only for testing)\r\n    if (debug) {\r\n        const randomFactor = (Math.random() - 0.5) * 0.4;  // Adds variance (-0.2 to 0.2)\r\n        normalizedScore = Math.max(-1, Math.min(1, normalizedScore + randomFactor));\r\n    }\r\n\r\n    // Convert sentiment score (-1 to 1) to a 0-100 scale\r\n    const percentage = ((normalizedScore + 1) * 50).toFixed(1);\r\n\r\n    // Define a more fragile color scale for better differentiation\r\n    const getColor = (value) => {\r\n        if (value >= 90) return \"#006400\";  \r\n        if (value >= 80) return \"#28a745\";  \r\n        if (value >= 70) return \"#40c057\";  \r\n        if (value >= 60) return \"#87d068\";  \r\n        if (value >= 50) return \"#2596be\";  \r\n        if (value >= 40) return \"#ffd700\";  \r\n        if (value >= 30) return \"#ff8c00\";  \r\n        if (value >= 20) return \"#e28743\";  \r\n        if (value >= 10) return \"#ff6347\";  \r\n        return \"#dc3545\";  \r\n    };\r\n\r\n    const data = [{ value: Number(percentage), fill: getColor(Number(percentage)) }];\r\n\r\n    return (\r\n        <div className=\"sentiment-meter text-center\">\r\n            <RadialBarChart \r\n                width={250} \r\n                height={150} \r\n                cx={125} \r\n                cy={150} \r\n                innerRadius={50} \r\n                outerRadius={100} \r\n                startAngle={180} \r\n                endAngle={0} \r\n                barSize={15} \r\n                data={data}\r\n            >\r\n                <PolarAngleAxis \r\n                    type=\"number\" \r\n                    domain={[0, 100]} \r\n                    angleAxisId={0} \r\n                    tick={false} \r\n                />\r\n                <RadialBar \r\n                    background={{ fill: \"#ddd\" }} \r\n                    dataKey=\"value\" \r\n                />\r\n            </RadialBarChart>\r\n            <h6 className=\"mt-2\" style={{ color: getColor(percentage) }}>\r\n                {normalizedScore > 0.3 ? \"Positive\" : normalizedScore < -0.3 ? \"Negative\" : \"Neutral\"}\r\n            </h6>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SentimentMeter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}