{"ast":null,"code":"import React from\"react\";import{ProgressBar}from\"react-bootstrap\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SentimentMeter=_ref=>{let{score}=_ref;// Ensure score is a number and within bounds\nconst normalizedScore=Math.max(-1,Math.min(1,Number(score)||0));// Determine the variant (color) based on the score\nconst getVariant=value=>{if(value>0.3)return\"success\";// Positive\nif(value<-0.3)return\"danger\";// Negative\nreturn\"warning\";// Neutral\n};// Calculate the percentage for the progress bar\nconst getPercentage=value=>{return((value+1)*50).toFixed(1);};// Get the label for the progress bar\nconst getLabel=value=>{return`${getPercentage(value)}%`;};// Get the trend label (Positive, Negative, Neutral)\nconst getTrendLabel=value=>{if(value>0.3)return\"Positive Trend\";if(value<-0.3)return\"Negative Trend\";return\"Neutral Trend\";};return/*#__PURE__*/_jsxs(\"div\",{className:\"sentiment-meter\",children:[/*#__PURE__*/_jsx(ProgressBar,{now:getPercentage(normalizedScore),variant:getVariant(normalizedScore),animated:true,striped:true,label:getLabel(normalizedScore),style:{height:'25px'}}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-2\",children:getTrendLabel(normalizedScore)})]});};export default SentimentMeter;","map":{"version":3,"names":["React","ProgressBar","jsx","_jsx","jsxs","_jsxs","SentimentMeter","_ref","score","normalizedScore","Math","max","min","Number","getVariant","value","getPercentage","toFixed","getLabel","getTrendLabel","className","children","now","variant","animated","striped","label","style","height"],"sources":["D:/IBM-Analyzer/frontend/src/components/SentimentMeter.js"],"sourcesContent":["import React from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\n\r\nconst SentimentMeter = ({ score }) => {\r\n    // Ensure score is a number and within bounds\r\n    const normalizedScore = Math.max(-1, Math.min(1, Number(score) || 0));\r\n    \r\n    // Determine the variant (color) based on the score\r\n    const getVariant = (value) => {\r\n        if (value > 0.3) return \"success\";  // Positive\r\n        if (value < -0.3) return \"danger\";  // Negative\r\n        return \"warning\";  // Neutral\r\n    };\r\n\r\n    // Calculate the percentage for the progress bar\r\n    const getPercentage = (value) => {\r\n        return ((value + 1) * 50).toFixed(1);\r\n    };\r\n\r\n    // Get the label for the progress bar\r\n    const getLabel = (value) => {\r\n        return `${getPercentage(value)}%`;\r\n    };\r\n\r\n    // Get the trend label (Positive, Negative, Neutral)\r\n    const getTrendLabel = (value) => {\r\n        if (value > 0.3) return \"Positive Trend\";\r\n        if (value < -0.3) return \"Negative Trend\";\r\n        return \"Neutral Trend\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"sentiment-meter\">\r\n            <ProgressBar \r\n                now={getPercentage(normalizedScore)}\r\n                variant={getVariant(normalizedScore)}\r\n                animated\r\n                striped\r\n                label={getLabel(normalizedScore)}\r\n                style={{ height: '25px' }}\r\n            />\r\n            <div className=\"text-center mt-2\">\r\n                {getTrendLabel(normalizedScore)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SentimentMeter;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAe,IAAd,CAAEC,KAAM,CAAC,CAAAD,IAAA,CAC7B;AACA,KAAM,CAAAE,eAAe,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAED,IAAI,CAACE,GAAG,CAAC,CAAC,CAAEC,MAAM,CAACL,KAAK,CAAC,EAAI,CAAC,CAAC,CAAC,CAErE;AACA,KAAM,CAAAM,UAAU,CAAIC,KAAK,EAAK,CAC1B,GAAIA,KAAK,CAAG,GAAG,CAAE,MAAO,SAAS,CAAG;AACpC,GAAIA,KAAK,CAAG,CAAC,GAAG,CAAE,MAAO,QAAQ,CAAG;AACpC,MAAO,SAAS,CAAG;AACvB,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAID,KAAK,EAAK,CAC7B,MAAO,CAAC,CAACA,KAAK,CAAG,CAAC,EAAI,EAAE,EAAEE,OAAO,CAAC,CAAC,CAAC,CACxC,CAAC,CAED;AACA,KAAM,CAAAC,QAAQ,CAAIH,KAAK,EAAK,CACxB,MAAO,GAAGC,aAAa,CAACD,KAAK,CAAC,GAAG,CACrC,CAAC,CAED;AACA,KAAM,CAAAI,aAAa,CAAIJ,KAAK,EAAK,CAC7B,GAAIA,KAAK,CAAG,GAAG,CAAE,MAAO,gBAAgB,CACxC,GAAIA,KAAK,CAAG,CAAC,GAAG,CAAE,MAAO,gBAAgB,CACzC,MAAO,eAAe,CAC1B,CAAC,CAED,mBACIV,KAAA,QAAKe,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC5BlB,IAAA,CAACF,WAAW,EACRqB,GAAG,CAAEN,aAAa,CAACP,eAAe,CAAE,CACpCc,OAAO,CAAET,UAAU,CAACL,eAAe,CAAE,CACrCe,QAAQ,MACRC,OAAO,MACPC,KAAK,CAAER,QAAQ,CAACT,eAAe,CAAE,CACjCkB,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAO,CAAE,CAC7B,CAAC,cACFzB,IAAA,QAAKiB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC5BF,aAAa,CAACV,eAAe,CAAC,CAC9B,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}