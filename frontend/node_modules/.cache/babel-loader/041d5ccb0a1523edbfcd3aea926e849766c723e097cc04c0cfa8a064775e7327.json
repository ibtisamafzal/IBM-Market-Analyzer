{"ast":null,"code":"import axios from\"axios\";const API_BASE_URL=\"http://127.0.0.1:5000/api/news\";// Updated URL prefix\nexport const fetchNewsWithSentiment=async query=>{try{const response=await axios.get(`${API_BASE_URL}/fetch-news`,{params:{query},headers:{'Content-Type':'application/json','Accept':'application/json'}});return response.data;}catch(error){console.error(\"Error fetching news:\",error);throw error;// Let the component handle the error\n}};","map":{"version":3,"names":["axios","API_BASE_URL","fetchNewsWithSentiment","query","response","get","params","headers","data","error","console"],"sources":["D:/IBM-Analyzer/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://127.0.0.1:5000/api/news\"; // Updated URL prefix\r\n\r\nexport const fetchNewsWithSentiment = async (query) => {\r\n    try {\r\n        const response = await axios.get(`${API_BASE_URL}/fetch-news`, {\r\n            params: { query },\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        });\r\n        \r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"Error fetching news:\", error);\r\n        throw error; // Let the component handle the error\r\n    }\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAG,gCAAgC,CAAE;AAEvD,MAAO,MAAM,CAAAC,sBAAsB,CAAG,KAAO,CAAAC,KAAK,EAAK,CACnD,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,aAAa,CAAE,CAC3DK,MAAM,CAAE,CAAEH,KAAM,CAAC,CACjBI,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,QAAQ,CAAE,kBACd,CACJ,CAAC,CAAC,CAEF,MAAO,CAAAH,QAAQ,CAACI,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,KAAM,CAAAA,KAAK,CAAE;AACjB,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}