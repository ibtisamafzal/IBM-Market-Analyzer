{"ast":null,"code":"var _jsxFileName = \"D:\\\\IBM-Analyzer\\\\frontend\\\\src\\\\components\\\\SentimentMeter.js\";\nimport React from \"react\";\nimport { ProgressBar, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentMeter = ({\n  score\n}) => {\n  const getSentimentLabel = score => {\n    if (score > 0.6) return \"🔥 Very Positive\";\n    if (score > 0.3) return \"😊 Positive\";\n    if (score > -0.3) return \"😐 Neutral\";\n    if (score > -0.6) return \"😕 Negative\";\n    return \"💀 Very Negative\";\n  };\n  const getVariant = score => {\n    if (score > 0.6) return \"success\";\n    if (score > 0.3) return \"info\";\n    if (score > -0.3) return \"secondary\";\n    if (score > -0.6) return \"warning\";\n    return \"danger\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sentiment-meter\",\n    children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n      placement: \"top\",\n      overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n        children: getSentimentLabel(score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 26\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: (score + 1) * 50,\n        variant: getVariant(score),\n        animated: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-white\",\n      children: getSentimentLabel(score)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = SentimentMeter;\nexport default SentimentMeter;\nvar _c;\n$RefreshReg$(_c, \"SentimentMeter\");","map":{"version":3,"names":["React","ProgressBar","OverlayTrigger","Tooltip","jsxDEV","_jsxDEV","SentimentMeter","score","getSentimentLabel","getVariant","className","children","placement","overlay","fileName","_jsxFileName","lineNumber","columnNumber","now","variant","animated","_c","$RefreshReg$"],"sources":["D:/IBM-Analyzer/frontend/src/components/SentimentMeter.js"],"sourcesContent":["import React from \"react\";\r\nimport { ProgressBar, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nconst SentimentMeter = ({ score }) => {\r\n    const getSentimentLabel = (score) => {\r\n        if (score > 0.6) return \"🔥 Very Positive\";\r\n        if (score > 0.3) return \"😊 Positive\";\r\n        if (score > -0.3) return \"😐 Neutral\";\r\n        if (score > -0.6) return \"😕 Negative\";\r\n        return \"💀 Very Negative\";\r\n    };\r\n\r\n    const getVariant = (score) => {\r\n        if (score > 0.6) return \"success\";\r\n        if (score > 0.3) return \"info\";\r\n        if (score > -0.3) return \"secondary\";\r\n        if (score > -0.6) return \"warning\";\r\n        return \"danger\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"sentiment-meter\">\r\n            <OverlayTrigger\r\n                placement=\"top\"\r\n                overlay={<Tooltip>{getSentimentLabel(score)}</Tooltip>}\r\n            >\r\n                <ProgressBar now={(score + 1) * 50} variant={getVariant(score)} animated />\r\n            </OverlayTrigger>\r\n            <p className=\"mt-2 text-white\">{getSentimentLabel(score)}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SentimentMeter;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,cAAc,EAAEC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAClC,MAAMC,iBAAiB,GAAID,KAAK,IAAK;IACjC,IAAIA,KAAK,GAAG,GAAG,EAAE,OAAO,kBAAkB;IAC1C,IAAIA,KAAK,GAAG,GAAG,EAAE,OAAO,aAAa;IACrC,IAAIA,KAAK,GAAG,CAAC,GAAG,EAAE,OAAO,YAAY;IACrC,IAAIA,KAAK,GAAG,CAAC,GAAG,EAAE,OAAO,aAAa;IACtC,OAAO,kBAAkB;EAC7B,CAAC;EAED,MAAME,UAAU,GAAIF,KAAK,IAAK;IAC1B,IAAIA,KAAK,GAAG,GAAG,EAAE,OAAO,SAAS;IACjC,IAAIA,KAAK,GAAG,GAAG,EAAE,OAAO,MAAM;IAC9B,IAAIA,KAAK,GAAG,CAAC,GAAG,EAAE,OAAO,WAAW;IACpC,IAAIA,KAAK,GAAG,CAAC,GAAG,EAAE,OAAO,SAAS;IAClC,OAAO,QAAQ;EACnB,CAAC;EAED,oBACIF,OAAA;IAAKK,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BN,OAAA,CAACH,cAAc;MACXU,SAAS,EAAC,KAAK;MACfC,OAAO,eAAER,OAAA,CAACF,OAAO;QAAAQ,QAAA,EAAEH,iBAAiB,CAACD,KAAK;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAE;MAAAN,QAAA,eAEvDN,OAAA,CAACJ,WAAW;QAACiB,GAAG,EAAE,CAACX,KAAK,GAAG,CAAC,IAAI,EAAG;QAACY,OAAO,EAAEV,UAAU,CAACF,KAAK,CAAE;QAACa,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACjBZ,OAAA;MAAGK,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEH,iBAAiB,CAACD,KAAK;IAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEd,CAAC;AAACI,EAAA,GA5BIf,cAAc;AA8BpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}